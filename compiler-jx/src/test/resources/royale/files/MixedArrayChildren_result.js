/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Generated by Apache Royale Compiler from MixedArrayChildren.mxml
 * MixedArrayChildren
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('MixedArrayChildren');

goog.require('org.apache.royale.core.Application');
goog.require('Object');



/**
 * @constructor
 * @extends {org.apache.royale.core.Application}
 */
MixedArrayChildren = function() {
  MixedArrayChildren.base(this, 'constructor');
  
  /**
   * @private
   * @type {Object}
   */
  this.obj_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;
};
goog.inherits(MixedArrayChildren, org.apache.royale.core.Application);




Object.defineProperties(MixedArrayChildren.prototype, /** @lends {MixedArrayChildren.prototype} */ {
  obj: {
    /** @this {MixedArrayChildren} */
    get: function() {
      return this.obj_;
    },
    /** @this {MixedArrayChildren} */
    set: function(value) {
      if (value != this.obj_) {
        this.obj_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'obj', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {MixedArrayChildren} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = MixedArrayChildren.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          Object,
          2,
          'id',
          true,
          'obj',
          'propertyName',
          true,
          [123.4,'hello',true],
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
MixedArrayChildren.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MixedArrayChildren', qName: 'MixedArrayChildren', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
MixedArrayChildren.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'obj': { type: 'Object', access: 'readwrite', declaredBy: 'MixedArrayChildren'}
      };
    },
    methods: function () {
      return {
        'MixedArrayChildren': { type: '', declaredBy: 'MixedArrayChildren'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
MixedArrayChildren.prototype.ROYALE_COMPILE_FLAGS = 9;



